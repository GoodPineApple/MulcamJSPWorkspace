package controller;


import java.io.IOException;
import java.util.Collections;
import java.util.HashSet;
import java.util.Set;

import javax.websocket.OnClose;
import javax.websocket.OnMessage;
import javax.websocket.OnOpen;
import javax.websocket.Session;
import javax.websocket.server.ServerEndpoint;

@ServerEndpoint("/broadcasting") //�ּ�
public class BroadSocket {
	    //hashSet ���� Ŭ���̾�Ʈ ��ü �� ������ safe
		private static Set<Session> clients = Collections
				.synchronizedSet(new HashSet<Session>());

		@OnMessage //�޼��� ó��
		public void onMessage(String message, Session session) throws IOException {
			synchronized (clients) {
				for (Session client : clients) {
					if (!client.equals(session)) {
						System.out.println("클라이언트 세션 ID?"+session.getId());
						client.getBasicRemote().sendText(message); //Ŭ���̾�Ʈ���� �����޼��� �����ֱ�
					
					}
				}
			}
		}

		@OnOpen //Ŭ���̾�Ʈ ���� ���ǻ���
		public void onOpen(Session session) {
			System.out.println(session);
			clients.add(session);
		}

		@OnClose //Ŭ���̾�Ʈ ���� ��������
		public void onClose(Session session) {
			clients.remove(session);
		}

}
